version: '3.8'

services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: ai-chat-backend
    restart: unless-stopped
    environment:
      - HOST=0.0.0.0
      - PORT=8000
      - DEBUG=False
      - CORS_ORIGINS=http://localhost:3000,http://localhost,http://frontend
    env_file:
      - ./backend/.env
    volumes:
      - ./data:/app/data
      - ./logs:/app/logs
    ports:
      - "8000:8000"
    healthcheck:
      test: ["CMD", "python", "-c", "import requests; requests.get('http://localhost:8000/health')"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - ai-chat-network

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: ai-chat-frontend
    restart: unless-stopped
    ports:
      - "80:80"
    depends_on:
      backend:
        condition: service_healthy
    networks:
      - ai-chat-network

  # Redis для кеширования (опционально)
  redis:
    image: redis:7-alpine
    container_name: ai-chat-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - ai-chat-network

volumes:
  redis_data:

networks:
  ai-chat-network:
    driver: bridge
