# Simple production ready Dockerfile for AI Chat
# This image contains both backend and frontend in one container
FROM python:3.11-slim

# Install system dependencies
RUN apt-get update && apt-get install -y \
    curl \
    nginx \
    supervisor \
    nodejs \
    npm \
    && rm -rf /var/lib/apt/lists/*

# Set work directory
WORKDIR /app

# Copy backend requirements and install Python dependencies
COPY backend/requirements.txt ./backend/
RUN pip install --no-cache-dir -r backend/requirements.txt

# Copy frontend package files and install Node dependencies
COPY frontend/package*.json ./frontend/
WORKDIR /app/frontend
RUN npm ci --only=production

# Copy source code
WORKDIR /app
COPY backend/ ./backend/
COPY frontend/ ./frontend/

# Build frontend
WORKDIR /app/frontend
RUN npm run build

# Setup nginx
WORKDIR /app
RUN rm -f /etc/nginx/sites-enabled/default
COPY nginx-simple.conf /etc/nginx/sites-enabled/default

# Copy frontend build to nginx
RUN cp -r /app/frontend/dist/* /var/www/html/

# Copy data and create directories
COPY data/ ./data/
RUN mkdir -p /var/www/html /app/logs /app/storage

# Create supervisor config
RUN echo '[supervisord]' > /etc/supervisor/conf.d/app.conf && \
    echo 'nodaemon=true' >> /etc/supervisor/conf.d/app.conf && \
    echo '[program:backend]' >> /etc/supervisor/conf.d/app.conf && \
    echo 'command=python /app/backend/main.py' >> /etc/supervisor/conf.d/app.conf && \
    echo 'directory=/app/backend' >> /etc/supervisor/conf.d/app.conf && \
    echo 'autostart=true' >> /etc/supervisor/conf.d/app.conf && \
    echo 'autorestart=true' >> /etc/supervisor/conf.d/app.conf && \
    echo '[program:nginx]' >> /etc/supervisor/conf.d/app.conf && \
    echo 'command=nginx -g "daemon off;"' >> /etc/supervisor/conf.d/app.conf && \
    echo 'autostart=true' >> /etc/supervisor/conf.d/app.conf && \
    echo 'autorestart=true' >> /etc/supervisor/conf.d/app.conf

# Environment variables
ENV PORT=8000
ENV PYTHONUNBUFFERED=1

# Expose ports
EXPOSE 80 8000

# Health check
HEALTHCHECK --interval=30s --timeout=30s --start-period=10s --retries=3 \
    CMD curl -f http://localhost:80/ && curl -f http://localhost:8000/health || exit 1

# Start supervisor
CMD ["/usr/bin/supervisord", "-c", "/etc/supervisor/conf.d/app.conf"]
